// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion7

// WikipediaTableJSONAPIClient is the client API for WikipediaTableJSONAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type WikipediaTableJSONAPIClient interface {
	GetTables(ctx context.Context, in *TablesRequest, opts ...grpc.CallOption) (*TablesResponse, error)
}

type wikipediaTableJSONAPIClient struct {
	cc grpc.ClientConnInterface
}

func NewWikipediaTableJSONAPIClient(cc grpc.ClientConnInterface) WikipediaTableJSONAPIClient {
	return &wikipediaTableJSONAPIClient{cc}
}

func (c *wikipediaTableJSONAPIClient) GetTables(ctx context.Context, in *TablesRequest, opts ...grpc.CallOption) (*TablesResponse, error) {
	out := new(TablesResponse)
	err := c.cc.Invoke(ctx, "/wikipedia.WikipediaTableJSONAPI/GetTables", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WikipediaTableJSONAPIServer is the server API for WikipediaTableJSONAPI service.
// All implementations must embed UnimplementedWikipediaTableJSONAPIServer
// for forward compatibility
type WikipediaTableJSONAPIServer interface {
	GetTables(context.Context, *TablesRequest) (*TablesResponse, error)
	mustEmbedUnimplementedWikipediaTableJSONAPIServer()
}

// UnimplementedWikipediaTableJSONAPIServer must be embedded to have forward compatible implementations.
type UnimplementedWikipediaTableJSONAPIServer struct {
}

func (UnimplementedWikipediaTableJSONAPIServer) GetTables(context.Context, *TablesRequest) (*TablesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTables not implemented")
}
func (UnimplementedWikipediaTableJSONAPIServer) mustEmbedUnimplementedWikipediaTableJSONAPIServer() {}

// UnsafeWikipediaTableJSONAPIServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to WikipediaTableJSONAPIServer will
// result in compilation errors.
type UnsafeWikipediaTableJSONAPIServer interface {
	mustEmbedUnimplementedWikipediaTableJSONAPIServer()
}

func RegisterWikipediaTableJSONAPIServer(s *grpc.Server, srv WikipediaTableJSONAPIServer) {
	s.RegisterService(&_WikipediaTableJSONAPI_serviceDesc, srv)
}

func _WikipediaTableJSONAPI_GetTables_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TablesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WikipediaTableJSONAPIServer).GetTables(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wikipedia.WikipediaTableJSONAPI/GetTables",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WikipediaTableJSONAPIServer).GetTables(ctx, req.(*TablesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _WikipediaTableJSONAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "wikipedia.WikipediaTableJSONAPI",
	HandlerType: (*WikipediaTableJSONAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetTables",
			Handler:    _WikipediaTableJSONAPI_GetTables_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "internal/service/pb/wikitable.proto",
}
